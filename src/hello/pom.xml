<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hello</groupId>
    <artifactId>hello</artifactId>
    <version>1.0</version>
    <name>ume/hello</name>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <go.sdk.version>1.10</go.sdk.version>

        <classifier.win64>windows_amd64</classifier.win64>
        <classifier.linux64>linux_amd64</classifier.linux64>

        <app.exec.name>hello</app.exec.name>
        <packageid>hello</packageid>
        <go.output>bin</go.output>
        <go.version.output>${go.output}/distribution</go.version.output>
    </properties>

    <profiles>
        <profile>
            <id>linux</id>
            <properties>
                <targetArch>amd64</targetArch>
                <targetOs>linux</targetOs>
                <app.exec.name>hello</app.exec.name>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <directory>${basedir}${file.separator}bin</directory>
                <plugins>
                    <plugin>
                        <groupId>com.igormaznitsa</groupId>
                        <artifactId>mvn-golang-wrapper</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${go.output}</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <resources>
                                        <resource>
                                            <directory>src/${project.artifactId}</directory>
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>conf/**</include>
                                                <include>swagger/**</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/assembly/resources</directory>
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>**.sh</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>distribution</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target name="distribution">
                                        <tar destfile="${go.version.output}/${packageid}-${project.version}-${classifier.linux64}.tar.gz"
                                             longfile="posix" compression="gzip">
                                            <tarfileset dir="${go.output}" filemode="0644"
                                                        dirmode="0755"><!-- prefix="${packageid}" -->
                                                <exclude name="antrun/**"/>
                                                <exclude name="distribution/**"/>
                                                <exclude name="**/*.sh"/>
                                            </tarfileset>
                                            <tarfileset dir="${go.output}" filemode="0755"
                                                        dirmode="0755">
                                                <include name="**/*.sh"/>
                                                <include name="hello"/>
                                            </tarfileset>
                                        </tar>
                                        <attachartifact
                                                file="${go.version.output}/${packageid}-${project.version}-${classifier.linux64}.tar.gz"
                                                classifier="${classifier.linux64}" type="tar.gz"/>

                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dockerfile</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy verbose="false" file="${basedir}/src/assembly/docker/Dockerfile"
                                              todir="${go.version.output}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <properties>
                <targetArch>amd64</targetArch>
                <targetOs>windows</targetOs>
                <app.exec.name>hello.exe</app.exec.name>
            </properties>
            <build>
                <directory>${basedir}${file.separator}bin</directory>
                <plugins>
                    <plugin>
                        <groupId>com.igormaznitsa</groupId>
                        <artifactId>mvn-golang-wrapper</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources-windows</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${go.output}</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <resources>
                                        <resource>
                                            <directory>src/${project.artifactId}</directory>
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>conf/**</include>
                                                <include>swagger/**</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/assembly/resources</directory>
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>**.bat</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>distribution-windows</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target name="distribution">
                                        <zip destfile="${go.version.output}/${packageid}-${project.version}-${classifier.win64}.zip"
                                             update="true">
                                            <zipfileset dir="${go.output}" includes="**">
                                                <exclude name="antrun/**"/>
                                                <exclude name="distribution/**"/>
                                            </zipfileset>
                                        </zip>
                                        <attachartifact
                                                file="${go.version.output}/${packageid}-${project.version}-${classifier.win64}.zip"
                                                classifier="${classifier.win64}" type="zip"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>com.igormaznitsa</groupId>
                    <artifactId>mvn-golang-wrapper</artifactId>
                    <version>2.1.3</version>
                    <extensions>true</extensions>
                    <configuration>
                        <!--<disableSdkDownload>true</disableSdkDownload>-->
                        <goVersion>${go.sdk.version}</goVersion>
                        <useEnvVars>true</useEnvVars>
                        <env>
                            <GOPATH>${basedir}</GOPATH>
                            <CGO_ENABLED>0</CGO_ENABLED>
                        </env>
                        <sources>${basedir}/src/${project.artifactId}</sources>
                        <targetArch>${targetArch}</targetArch>
                        <targetOs>${targetOs}</targetOs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-build</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <resultName>${app.exec.name}</resultName>
                                <goVersion/>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-mvninstall</id>
                            <goals>
                                <goal>mvninstall</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
